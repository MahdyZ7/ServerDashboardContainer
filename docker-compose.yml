
services:
  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=server_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    init: true
    expose:
      - "5432"

#  echo "your_secure_password_here" | docker secret create postgres_password -

  backend:
    container_name: DataCollection
    build: ./srcs/DataCollection
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./srcs/DataCollection:/app
    networks:
      - backend
    depends_on:
      - postgres
    init: true

  api:
    container_name: API
    build: ./srcs/Backend
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./srcs/Backend:/app
    networks:
      - backend
    depends_on:
      - postgres
    init: true
    ports:
      - "5000:5000"
    expose:
      - "5000"

  frontend:
    container_name: Frontend
    build: ./srcs/Frontend
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - ./srcs/Frontend:/app
    networks:
      - backend
    depends_on:
      - backend
      - api
    init: true
    ports:
      - "3000:3000"
    expose:
      - "3000"


networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  